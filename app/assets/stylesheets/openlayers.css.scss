@import "common";

$width: 400px;

#map-tools-perspective {
  /*@include vendor-prefix(perspective, '400px');*/

  #map-tools {
    position: absolute;
    top: 0;
    right: 0;
    width: $width;
    z-index: 998;
    background-color: #fff;
    opacity: .95;
    padding: 10px;
    outline: 1px solid transparent;

    @include vendor-prefix(border-bottom-left-radius,5px);
    @include vendor-prefix(animation-fill-mode, 'forwards');
    @include vendor-prefix(transform-origin,'right');

    #map-tools-inner {
      #tools-app {
        float: left;
        min-width: 60px;
        width: 60px;
      }

      #layers-app {
        float: left;
        width: 80%;
      }
    }
  }
}

.map-tools-expanded {
  @include vendor-prefix(animation, 'expand-anim 2s');
}

@include keyframes('expand-anim') {
  from {
    @include vendor-prefix(transform, 'translateX(0deg)');
    @include vendor-prefix(opacity, 1.0);
  }
  to {
    @include vendor-prefix(transform, "translateX(#{$width})");
    @include vendor-prefix(opacity, 0.0);
  }
}

.map-tools-collapsed {
  @include vendor-prefix(animation, 'collapse-anim 2s');
}

@include keyframes('collapse-anim') {
  from {
    @include vendor-prefix(transform, "translateX(#{$width})");
    @include vendor-prefix(opacity, 0.0);
  }
  to {
    @include vendor-prefix(transform, 'translateX(0deg)');
    @include vendor-prefix(opacity, 1.0);
  }
}

#expanders-app {
  position: absolute;
  top: 0;
  right: 0;
  z-index: 999;
}

#expanders-app span {
  display: block;
}

div.olMap {
  position: absolute;
  top: 0;
  bottom: 0;
  right: 0;
  left: 0;
}

$positions: 'bl', 'br', 'tl', 'tr';
@for $i from 1 through 4 {
  $val: nth($positions, $i);
  $margin: '';
  $position: '';
  $popover_border_radius: '';
  @if $val == 'bl' {
    $position: 'top';
    $margin: 'right';
    $popover_border_radius: '0px 0px 0px 5px';
  } @else if $val == 'br' {
    $position: 'top';
    $margin: 'left';
    $popover_border_radius: '0px 5px 0px 0px';
  } @else if $val == 'tl' {
    $position: 'bottom';
    $margin: 'right';
    $popover_border_radius: '0px 0px 0px 5px';
  } @else if $val == 'tr' {
    $position: 'bottom';
    $margin: 'left';
    $popover_border_radius: '0px 5px 0px 0px';
  }
  $zero_radius: 'border-#{$position}-#{$margin}-radius';

  .map-bubble-#{$val} {
    @include vendor-prefix(#{$zero_radius}, '0px');
    margin-#{$margin}: 0px !important;
    position: absolute;
    left: 0;
    right: 0;
    top: 0;
    bottom: 0;
    width: 100%;
    .popover-title {
      @include vendor-prefix('border-radius', #{$popover_border_radius});
    }
  }
}

.olPopup {
  background-color: transparent !important;
}

.olPopup > div {
  background-color: transparent;

  .olPopupContent {
    background-color: transparent;
  }
}

.map-bubble-root {
  position: relative;
  width: 100%;
  min-width: 240px;
  max-width: 276px; /* must have this value because twitter bootstrap defines max-width for the embedded popover*/
  min-height: 200px;
  height: 100%;
}
